services:
  reverse-proxy:
    image: nginx:alpine
    container_name: "${COMPOSE_PROJECT_NAME}-reverse-proxy"
    restart: always
    ports:
      - "${HOST_MACHINE_UNSECURE_HOST_PORT}:80"
      - "${HOST_MACHINE_SECURE_HOST_PORT}:443"
    volumes:
      - "${NGINX_CONF_DIR}:/etc/nginx/conf.d:ro"  # NGINX configuration
      - "${SSL_DIR}:/etc/nginx/ssl:ro"         # SSL certificates
      - "${NGINX_LOG_DIR}:/var/log/nginx"          # NGINX logs
    networks:
      - frontend
    depends_on:
      - webserver
      # webserver:
      #   condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  webserver:
    build:
      context: ./bin/${PHPVERSION}
    container_name: "${COMPOSE_PROJECT_NAME}_webserver"
    restart: always
    volumes:
      - "${DOCUMENT_ROOT}:${APACHE_DOCUMENT_ROOT}:rw"  # Document root
      - "${VHOSTS_DIR}:/etc/apache2/sites-enabled:ro"  # Apache virtual hosts
      - "${PHP_INI}:/usr/local/etc/php/php.ini:ro"     # PHP configuration
      - "${APACHE_LOG_DIR}:/var/log/apache2"           # Apache logs
      - "${SSL_DIR}:/etc/apache2/ssl:ro"               # SSL certificates
      - "${BACKUP_DIR}:/var/lib/bkup/dumps"            # Backup directory
    environment:
      APACHE_DOCUMENT_ROOT: "${APACHE_DOCUMENT_ROOT}"
    depends_on:
      - database
    networks:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  database:
    build:
      context: ./bin/${DATABASE}
    container_name: "${COMPOSE_PROJECT_NAME}_database"
    restart: always
    volumes:
      - "${MYSQL_INITDB_DIR}:/docker-entrypoint-initdb.d:ro"  # Initialization scripts
      - "${MYSQL_DATA_DIR}:/var/lib/mysql"                   # MySQL data
      - "${MYSQL_LOG_DIR}:/var/log/mysql"                    # MySQL logs
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

  redis:
    image: redis:alpine
    container_name: "${COMPOSE_PROJECT_NAME}_redis"
    restart: always
    ports:
      - "127.0.0.1:${HOST_MACHINE_REDIS_PORT}:6379"
    volumes:
      - "${REDIS_DATA_DIR}:/data"  # Redis data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

# Enable phpMyAdmin only in development mode
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: "${COMPOSE_PROJECT_NAME}_phpmyadmin"
    restart: unless-stopped
    ports:
      - "${HOST_MACHINE_PMA_PORT}:80"
    volumes:
      - "${SSL_DIR}:/etc/phpmyadmin/ssl:ro"
    environment:
      PMA_HOST: "database"
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      UPLOAD_LIMIT: "${UPLOAD_LIMIT}"  # File upload size limit
      MEMORY_LIMIT: "${MEMORY_LIMIT}"  # Memory limit
    depends_on:
      - database
    networks:
      - backend
    profiles:
      - development  # Only include in the development profile

networks:
  frontend:
    driver: bridge  # Network for reverse proxy and webserver
  backend:
    driver: bridge  # Network for webserver, database, phpMyAdmin, and Redis
